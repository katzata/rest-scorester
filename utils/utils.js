/**
 * Sets the response headers.
 * @param {Object} req The request object generated by "ExpressJs".
 * @param {Object} res The response object generated by "ExpressJs".
 * @param {Array} additionalHeaders An array of objects with a single key value pair named - (header, value).
 * @returns the "ExpressJs" res.set() function setting the headers in order to keep it chainable, thus preventing the need to call it again in the parent function.
 */
function setResponseHeaders(req, res, tokens) {
    const headers = {
        "Content-Type": "application/json",
        "Access-Control-Allow-Origin": process.env.ALLOWED_ORIGIN,
        "Access-Control-Allow-Credentials": "true",
        "Access-Control-Expose-Headers": "Content-Type",
        "Access-Control-Allow-Methods": "GET, POST",
        "Access-Control-Allow-Headers": "headers, method, content-type, body, id, cookies",
    };

    res.set(headers);

    if (tokens) {
        setHTTPSCookies(res, tokens);
    };

    return res;
};

async function setHTTPSCookies(res, { accessToken, refreshToken }) {
    const cookieOptions = {
        httpOnly: true,
        sameSite: "Strict",
        secure: true,
        path: "/"
    };

    if (accessToken !== "clear" && refreshToken !== "clear") {
        return res.cookie(
            "aToken",
            accessToken, 
            { ...cookieOptions, maxAge: 0.25 * 60 * 60 * 1000 }
        )
        .cookie(
            "rToken",
            refreshToken,
            { ...cookieOptions, maxAge: 365 * 24 * 60 * 60 * 1000 }
        );
    } else {
        return res.clearCookie(
            "aToken",
            { ...cookieOptions, maxAge: 0.25 * 60 * 60 * 1000 }
        )
        .clearCookie(
            "rToken",
            { ...cookieOptions, maxAge: 365 * 24 * 60 * 60 * 1000 }
        );
    };
};

/**
 * Default response in place of the 404 page.
 * @param {Object} res The response object generated by "ExpressJs".
 * @param {String} message Optional message (if any).
 */
function send404(res, message) {
    const error = message ? message : "You shouldn't be doing this...";
    res.send(JSON.stringify({ Errors: error }, null, 4))
};

module.exports = {
    setResponseHeaders,
    send404
};